!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).WasiMarshalling={})}(this,(function(t){"use strict";class e{constructor(t,e,r){this.memory=t,this.malloc=e,this.free=r,this._dataView=null}get dataView(){return null!=this._dataView&&0!==this._dataView.byteLength||(this._dataView=new DataView(this.memory.buffer)),this._dataView}}class r{constructor(t){this.TypedArrayType=t}alloc(t,e){throw new Error("Not Implemented")}free(t,e,r){throw new Error("Not Implemented")}marshall(t,e){throw new Error("Not Implemented")}unmarshall(t,e,r){throw new Error("Not Implemented")}copy(t,e){throw new Error("Not Implemented")}}class n extends r{alloc(t){return t.malloc(this.TypedArrayType.BYTES_PER_ELEMENT)}free(t,e,r){e.free(t)}}class s extends r{constructor(){super(Uint32Array)}}class a{constructor(t){this.contents=t}}class i{constructor(t,e,r){this.type=t,this.isInput=e,this.isOutput=r}marshall(t,e){return this.type instanceof n?t:this.isInput?this.type.marshall(t,e):this.type.alloc(e,t)}unmarshall(t,e,r){if(this.type instanceof n)return t;if(this.isOutput){if(null==r)throw new Error("Out put argument missing");if("number"!=typeof t)throw new Error("Expected address to be a number");const n=this.type.unmarshall(t,e,r);this.type.copy(r,n)}else{if("number"!=typeof t)throw new Error("Expected address to be a number");this.type.free(t,e,r)}}}const l=0,o={"2BIG":1,ACCES:2,ADDRINUSE:3,ADDRNOTAVAIL:4,AFNOSUPPORT:5,AGAIN:6,ALREADY:7,BADF:8,BADMSG:9,BUSY:10,CANCELED:11,CHILD:12,CONNABORTED:13,CONNREFUSED:14,CONNRESET:15,DEADLK:16,DESTADDRREQ:17,DOM:18,DQUOT:19,EXIST:20,FAULT:21,FBIG:22,HOSTUNREACH:23,IDRM:24,ILSEQ:25,INPROGRESS:26,INTR:27,INVAL:28,IO:29,ISCONN:30,ISDIR:31,LOOP:32,MFILE:33,MLINK:34,MSGSIZE:35,MULTIHOP:36,NAMETOOLONG:37,NETDOWN:38,NETRESET:39,NETUNREACH:40,NFILE:41,NOBUFS:42,NODEV:43,NOENT:44,NOEXEC:45,NOLCK:46,NOLINK:47,NOMEM:48,NOMSG:49,NOPROTOOPT:50,NOSPC:51,NOSYS:52,NOTCONN:53,NOTDIR:54,NOTEMPTY:55,NOTRECOVERABLE:56,NOTSOCK:57,NOTSUP:58,NOTTY:59,NXIO:60,OVERFLOW:61,OWNERDEAD:62,PERM:63,PIPE:64,PROTO:65,PROTONOSUPPORT:66,PROTOTYPE:67,RANGE:68,ROFS:69,SPIPE:70,SRCH:71,STALE:72,TIMEDOUT:73,TXTBSY:74,XDEV:75,NOTCAPABLE:76},h={UNKNOWN:0,BLOCK_DEVICE:1,CHARACTER_DEVICE:2,DIRECTORY:3,REGULAR_FILE:4,SOCKET_DGRAM:5,SOCKET_STREAM:6,SYMBOLIC_LINK:7},c={APPEND:1,DSYNC:2,NONBLOCK:4,RSYNC:8,SYNC:16},u={FD:{DATASYNC:1n,READ:2n,SEEK:4n,FDSTAT_SET_FLAGS:8n,SYNC:16n,TELL:32n,WRITE:64n,ADVISE:128n,ALLOCATE:256n,READDIR:16384n,FILESTAT_GET:2097152n,FILESTAT_SET_SIZE:4194304n,FILESTAT_SET_TIMES:8388608n},PATH:{CREATE_DIRECTORY:512n,CREATE_FILE:1024n,LINK_SOURCE:2048n,LINK_TARGET:4096n,OPEN:8192n,READLINK:32768n,RENAME_SOURCE:65536n,RENAME_TARGET:131072n,FILESTAT_GET:262144n,FILESTAT_SET_SIZE:524288n,FILESTAT_SET_TIMES:1048576n,SYMLINK:16777216n,REMOVE_DIRECTORY:33554432n,UNLINK_FILE:67108864n},POLL_FD_READWRITE:134217728n,SOCK_SHUTDOWN:268435456n};function y(t,e,r){let n=e+r;for(;n.includes("\n");){const[e,r]=n.split("\n",2);t(e),n=r}return n}t.ArgumentDef=i,t.ArrayType=class extends s{constructor(t,e){super(),this.type=t,this.length=e}alloc(t,e){if(null!=this.length&&null!=e&&this.length!==e.length)throw new RangeError("Invalid array length");const r=null!=e?e.length:this.length;if(null==r)throw new RangeError("Unknown length");return t.malloc(r*this.type.TypedArrayType.BYTES_PER_ELEMENT)}free(t,e,r){try{const n=null!=r?r.length:this.length;if(null==n)throw new Error("Unknwon length for array");if(this.type instanceof s){new this.type.TypedArrayType(e.memory.buffer,t,n).forEach(t=>this.type.free(t,e,null))}}finally{e.free(t)}}marshall(t,e){const r=this.alloc(e,t),n=new this.type.TypedArrayType(e.memory.buffer,r,t.length);return this.type instanceof s?t.forEach((t,r)=>{n[r]=this.type.marshall(t,e)}):n.set(t),r}unmarshall(t,e,r){try{const n=null!=r?r.length:this.length;if(null==n)throw new Error("Unknwon length for array");const a=new this.type.TypedArrayType(e.memory.buffer,t,n);return this.type instanceof s?Array.from(a,t=>this.type.unmarshall(t,e,null)):Array.from(a)}finally{e.free(t)}}copy(t,e){return t.splice(0,t.length,...e),t}},t.Float32Type=class extends n{constructor(){super(Float32Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setFloat32(r,t),r}unmarshall(t,e,r){try{return e.dataView.getFloat32(t)}finally{e.free(t)}}},t.Float64Type=class extends n{constructor(){super(Float64Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setFloat64(r,t),r}unmarshall(t,e,r){try{return e.dataView.getFloat64(t)}finally{e.free(t)}}},t.FunctionPrototype=class{constructor(t,e){this.argDefs=t,this.returns=e}invoke(t,e,...r){if(this.argDefs.length!==r.length)throw new RangeError("Invalid number of arguments");const n=r.map((e,r)=>this.argDefs[r].marshall(e,t)),s=e(...n);if(r.forEach((e,r)=>this.argDefs[r].unmarshall(n[r],t,e)),null!=this.returns)return this.returns.unmarshall(s,t)}},t.In=class extends i{constructor(t){super(t,!0,!1)}},t.InOut=class extends i{constructor(t){super(t,!0,!0)}},t.Int16Type=class extends n{constructor(){super(Int8Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setInt16(r,t),r}unmarshall(t,e,r){try{return e.dataView.getInt16(t)}finally{e.free(t)}}},t.Int32Type=class extends n{constructor(){super(Int32Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setInt32(r,t),r}unmarshall(t,e,r){try{return e.dataView.getInt32(t)}finally{e.free(t)}}},t.Int64Type=class extends n{constructor(){super(BigInt64Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setBigInt64(r,t),r}unmarshall(t,e,r){try{return e.dataView.getBigInt64(t)}finally{e.free(t)}}},t.Int8Type=class extends n{constructor(){super(Int8Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setInt8(r,t),r}unmarshall(t,e,r){try{return e.dataView.getInt8(t)}finally{e.free(t)}}},t.MemoryManager=e,t.Out=class extends i{constructor(t){super(t,!1,!0)}},t.Pointer=a,t.PointerType=class extends s{constructor(t){super(),this.type=t}free(t,e){try{const r=e.dataView.getUint32(t);this.type.free(r,e)}finally{e.free(t)}}alloc(t){return t.malloc(Uint32Array.BYTES_PER_ELEMENT)}marshall(t,e){const r=this.alloc(e),n=this.type.marshall(t.contents,e);return e.dataView.setUint32(r,n),r}unmarshall(t,e){try{const r=e.dataView.getUint32(t);return new a(this.type.unmarshall(r,e))}finally{e.free(t)}}copy(t,e){return t.contents=e.contents,t}},t.ReferenceType=s,t.StringType=class extends s{free(t,e){e.free(t)}marshall(t,e){const r=(new TextEncoder).encode(t),n=e.malloc(r.byteLength+1);return new Uint8Array(e.memory.buffer,n,r.byteLength+1).set(r),n}unmarshall(t,e,r){try{const r=new Uint8Array(e.memory.buffer,t);let n=0;for(;0!==r[n];)++n;const s=new Uint8Array(e.memory.buffer,t,n),a=new TextDecoder;return a.decode(s)}finally{e.free(t)}}},t.Type=r,t.Uint16Type=class extends n{constructor(){super(Uint16Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setUint16(r,t),r}unmarshall(t,e,r){try{return e.dataView.getUint16(t)}finally{e.free(t)}}},t.Uint32Type=class extends n{constructor(){super(Uint32Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setUint32(r,t),r}unmarshall(t,e,r){try{return e.dataView.getUint32(t)}finally{e.free(t)}}},t.Uint64Type=class extends n{constructor(){super(BigUint64Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setBigUint64(r,t),r}unmarshall(t,e,r){try{return e.dataView.getBigUint64(t)}finally{e.free(t)}}},t.Uint8Type=class extends n{constructor(){super(Uint8Array)}marshall(t,e){const r=this.alloc(e);return e.dataView.setUint8(r,t),r}unmarshall(t,e,r){try{return e.dataView.getUint8(t)}finally{e.free(t)}}},t.ValueType=n,t.Wasi=class{constructor(t){this.env=t,this.instance=null,this.memoryManager=null,this.stdoutText="",this.stderrText=""}init(t){this.instance=t,this.memoryManager=new e(t.exports.memory,t.exports.malloc,t.exports.free)}environ_get(t,e){const r=new TextEncoder;return Object.entries(this.env).map(([t,e])=>`${t}=${e}`).forEach(n=>{this.memoryManager.dataView.setUint32(t,e,!0),t+=4;const s=r.encode(n),a=new Uint8Array(this.memoryManager.memory.buffer,e,s.length+1);e+=a.byteLength}),l}environ_sizes_get(t,e){const r=new TextEncoder,n=Object.entries(this.env).map(([t,e])=>`${t}=${e}`),s=n.reduce((t,e)=>t+r.encode(e).byteLength+1,0);return this.memoryManager.dataView.setUint32(t,n.length,!0),this.memoryManager.dataView.setUint32(e,s,!0),l}proc_exit(t){return l}fd_close(t){return l}fd_seek(t,e,r,n,s){return l}fd_write(t,e,r,n){if(1!==t&&2!==t)return o.BADF;const s=Array.from({length:r},(t,r)=>{const n=e+8*r,s=this.memoryManager.dataView.getUint32(n,!0),a=this.memoryManager.dataView.getUint32(n+4,!0);return new Uint8Array(this.memoryManager.memory.buffer,s,a)}),a=new TextDecoder;let i=0,h="";return s.forEach(t=>{h+=a.decode(t),i+=t.byteLength}),this.memoryManager.dataView.setUint32(n,i,!0),1===t?this.stdoutText=y(console.log,this.stdoutText,h):2===t&&(this.stderrText=y(console.error,this.stderrText,h)),l}fd_fdstat_get(t,e){if(1!==t&&2!==t)return o.BADF;if(null==this.memoryManager||null==this.memoryManager.dataView)throw new Error("No memory");return this.memoryManager.dataView.setUint8(e+0,h.CHARACTER_DEVICE),this.memoryManager.dataView.setUint32(e+2,c.APPEND,!0),this.memoryManager.dataView.setBigUint64(e+8,u.FD.WRITE,!0),this.memoryManager.dataView.setBigUint64(e+16,u.FD.WRITE,!0),l}imports(){return{environ_get:(t,e)=>this.environ_get(t,e),environ_sizes_get:(t,e)=>this.environ_sizes_get(t,e),proc_exit:t=>this.proc_exit(t),fd_close:t=>this.fd_close(t),fd_seek:(t,e,r,n,s)=>this.fd_seek(t,e,r,n,s),fd_write:(t,e,r,n)=>this.fd_write(t,e,r,n),fd_fdstat_get:(t,e)=>this.fd_fdstat_get(t,e)}}},Object.defineProperty(t,"__esModule",{value:!0})}));
